{"ast":null,"code":"var _jsxFileName = \"/Users/tom/SNTCH-polygon/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { magicEthereum } from \"../magic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n  const history = useHistory();\n  /**\n   * Perform login action via Magic's passwordless flow. Upon successuful\n   * completion of the login flow, a user is redirected to the homepage.\n   */\n\n  const login = useCallback(async () => {\n    setIsLoggingIn(true);\n\n    try {\n      await magicEthereum.auth.loginWithMagicLink({\n        email,\n        redirectURI: new URL(\"/callback\", window.location.origin).href\n      });\n      history.push(\"/\");\n    } catch {\n      setIsLoggingIn(false);\n    }\n  }, [email]);\n  /**\n   * Saves the value of our email input into component state.\n   */\n\n  const handleInputOnChange = useCallback(event => {\n    setEmail(event.target.value);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please sign up or login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      required: \"required\",\n      placeholder: \"Enter your email\",\n      onChange: handleInputOnChange,\n      disabled: isLoggingIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      disabled: isLoggingIn,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"2chULeX6hgGcWFE/KrKqnxs1I/c=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/tom/SNTCH-polygon/src/components/Login.js"],"names":["React","useCallback","useState","useHistory","magicEthereum","Login","email","setEmail","isLoggingIn","setIsLoggingIn","history","login","auth","loginWithMagicLink","redirectURI","URL","window","location","origin","href","push","handleInputOnChange","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,aAAT,QAA8B,UAA9B;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMQ,OAAO,GAAGP,UAAU,EAA1B;AAEA;AACF;AACA;AACA;;AACE,QAAMQ,KAAK,GAAGV,WAAW,CAAC,YAAY;AACpCQ,IAAAA,cAAc,CAAC,IAAD,CAAd;;AAEA,QAAI;AACF,YAAML,aAAa,CAACQ,IAAd,CAAmBC,kBAAnB,CAAsC;AAC1CP,QAAAA,KAD0C;AAE1CQ,QAAAA,WAAW,EAAE,IAAIC,GAAJ,CAAQ,WAAR,EAAqBC,MAAM,CAACC,QAAP,CAAgBC,MAArC,EAA6CC;AAFhB,OAAtC,CAAN;AAIAT,MAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACD,KAND,CAME,MAAM;AACNX,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GAZwB,EAYtB,CAACH,KAAD,CAZsB,CAAzB;AAcA;AACF;AACA;;AACE,QAAMe,mBAAmB,GAAGpB,WAAW,CAACqB,KAAK,IAAI;AAC/Cf,IAAAA,QAAQ,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFsC,EAEpC,EAFoC,CAAvC;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,QAAQ,EAAC,UAHX;AAIE,MAAA,WAAW,EAAC,kBAJd;AAKE,MAAA,QAAQ,EAAEH,mBALZ;AAME,MAAA,QAAQ,EAAEb;AANZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAQ,MAAA,OAAO,EAAEG,KAAjB;AAAwB,MAAA,QAAQ,EAAEH,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA5CuBH,K;UAGNF,U;;;KAHME,K","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { magicEthereum } from \"../magic\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n  const history = useHistory();\n\n  /**\n   * Perform login action via Magic's passwordless flow. Upon successuful\n   * completion of the login flow, a user is redirected to the homepage.\n   */\n  const login = useCallback(async () => {    \n    setIsLoggingIn(true);\n\n    try {\n      await magicEthereum.auth.loginWithMagicLink({\n        email,\n        redirectURI: new URL(\"/callback\", window.location.origin).href,\n      });\n      history.push(\"/\");\n    } catch {\n      setIsLoggingIn(false);\n    }\n  }, [email]);\n\n  /**\n   * Saves the value of our email input into component state.\n   */\n  const handleInputOnChange = useCallback(event => {\n    setEmail(event.target.value);\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>Please sign up or login</h1>\n      <input\n        type=\"email\"\n        name=\"email\"\n        required=\"required\"\n        placeholder=\"Enter your email\"\n        onChange={handleInputOnChange}\n        disabled={isLoggingIn}\n      />\n      <button onClick={login} disabled={isLoggingIn}>Send</button>\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}