{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tom/SNTCH-polygon/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/tom/SNTCH-polygon/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/tom/SNTCH-polygon/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useState}from\"react\";import{useHistory}from\"react-router\";import{magicEthereum}from\"../magic\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Login(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoggingIn=_useState4[0],setIsLoggingIn=_useState4[1];var history=useHistory();/**\n   * Perform login action via Magic's passwordless flow. Upon successuful\n   * completion of the login flow, a user is redirected to the homepage.\n   */var login=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoggingIn(true);_context.prev=1;_context.next=4;return magicEthereum.auth.loginWithMagicLink({email:email,redirectURI:new URL(\"/callback\",window.location.origin).href});case 4:history.push(\"/\");_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);setIsLoggingIn(false);case 10:case\"end\":return _context.stop();}}},_callee,null,[[1,7]]);})),[email]);/**\n   * Saves the value of our email input into component state.\n   */var handleInputOnChange=useCallback(function(event){setEmail(event.target.value);},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Please sign up or login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",required:\"required\",placeholder:\"Enter your email\",onChange:handleInputOnChange,disabled:isLoggingIn}),/*#__PURE__*/_jsx(\"button\",{onClick:login,disabled:isLoggingIn,children:\"Send\"})]});}","map":{"version":3,"sources":["/Users/tom/SNTCH-polygon/src/components/Login.js"],"names":["React","useCallback","useState","useHistory","magicEthereum","Login","email","setEmail","isLoggingIn","setIsLoggingIn","history","login","auth","loginWithMagicLink","redirectURI","URL","window","location","origin","href","push","handleInputOnChange","event","target","value"],"mappings":"0aAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,QAA7B,KAA6C,OAA7C,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,OAASC,aAAT,KAA8B,UAA9B,C,wFAEA,cAAe,SAASC,CAAAA,KAAT,EAAiB,eACJH,QAAQ,CAAC,EAAD,CADJ,wCACvBI,KADuB,eAChBC,QADgB,8BAEQL,QAAQ,CAAC,KAAD,CAFhB,yCAEvBM,WAFuB,eAEVC,cAFU,eAG9B,GAAMC,CAAAA,OAAO,CAAGP,UAAU,EAA1B,CAEA;AACF;AACA;AACA,KACE,GAAMQ,CAAAA,KAAK,CAAGV,WAAW,sEAAC,mIACxBQ,cAAc,CAAC,IAAD,CAAd,CADwB,sCAIhBL,CAAAA,aAAa,CAACQ,IAAd,CAAmBC,kBAAnB,CAAsC,CAC1CP,KAAK,CAALA,KAD0C,CAE1CQ,WAAW,CAAE,GAAIC,CAAAA,GAAJ,CAAQ,WAAR,CAAqBC,MAAM,CAACC,QAAP,CAAgBC,MAArC,EAA6CC,IAFhB,CAAtC,CAJgB,QAQtBT,OAAO,CAACU,IAAR,CAAa,GAAb,EARsB,+EAUtBX,cAAc,CAAC,KAAD,CAAd,CAVsB,oEAAD,GAYtB,CAACH,KAAD,CAZsB,CAAzB,CAcA;AACF;AACA,KACE,GAAMe,CAAAA,mBAAmB,CAAGpB,WAAW,CAAC,SAAAqB,KAAK,CAAI,CAC/Cf,QAAQ,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR,CACD,CAFsC,CAEpC,EAFoC,CAAvC,CAIA,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,+CADF,cAEE,cACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,OAFP,CAGE,QAAQ,CAAC,UAHX,CAIE,WAAW,CAAC,kBAJd,CAKE,QAAQ,CAAEH,mBALZ,CAME,QAAQ,CAAEb,WANZ,EAFF,cAUE,eAAQ,OAAO,CAAEG,KAAjB,CAAwB,QAAQ,CAAEH,WAAlC,kBAVF,GADF,CAcD","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { magicEthereum } from \"../magic\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n  const history = useHistory();\n\n  /**\n   * Perform login action via Magic's passwordless flow. Upon successuful\n   * completion of the login flow, a user is redirected to the homepage.\n   */\n  const login = useCallback(async () => {    \n    setIsLoggingIn(true);\n\n    try {\n      await magicEthereum.auth.loginWithMagicLink({\n        email,\n        redirectURI: new URL(\"/callback\", window.location.origin).href,\n      });\n      history.push(\"/\");\n    } catch {\n      setIsLoggingIn(false);\n    }\n  }, [email]);\n\n  /**\n   * Saves the value of our email input into component state.\n   */\n  const handleInputOnChange = useCallback(event => {\n    setEmail(event.target.value);\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>Please sign up or login</h1>\n      <input\n        type=\"email\"\n        name=\"email\"\n        required=\"required\"\n        placeholder=\"Enter your email\"\n        onChange={handleInputOnChange}\n        disabled={isLoggingIn}\n      />\n      <button onClick={login} disabled={isLoggingIn}>Send</button>\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}